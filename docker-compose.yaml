services:
  kafka:
    container_name: kafka
    image: apache/kafka:4.0.0
    ports:
    - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:    # Mount configuration file into container's volume.
      - ./docker/mosquitto/mosquitto-no-auth.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883 # Unencrypted, unauthenticated
      #- 1884:1884  # unencrypted, authenticated
      #- 8885:8885  # encrypted, authenticated

  influxdb:
      container_name: influxdb
      ports:
          - '8086:8086'
      image: 'docker.io/influxdb:2.2.0'

  mysql:
      container_name: mysql
      ports:
          - '3306:3306'
      image: 'docker.io/mysql:8.0'
      volumes:
          - mysql-data:/var/lib/mysql
      environment:
          MYSQL_DATABASE: sql_data
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin123
          MYSQL_ROOT_PASSWORD: admin123

  grafana:
    image: grafana/grafana-oss:8.4.3
    depends_on:
      - influxdb
      - mysql
    ports:
      - 3000:3000

volumes:
  mysql-data:
