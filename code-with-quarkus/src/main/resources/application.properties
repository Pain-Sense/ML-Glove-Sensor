# Configuring the application
quarkus.http.port=8089
quarkus.application.name=kafka-producer

# Configuring the outgoing Kafka topic
mp.messaging.outgoing.messages-out.connector=smallrye-kafka
mp.messaging.outgoing.messages-out.topic=garden_sensor_data
mp.messaging.outgoing.messages-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.messages-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer


# Configuring the outgoing Kafka topic
mp.messaging.outgoing.test.connector=smallrye-kafka
mp.messaging.outgoing.test.topic=test
mp.messaging.outgoing.test.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure Kafka client to handle Docker environment
mp.messaging.outgoing.messages-out.client.id=kafka-producer-app
mp.messaging.outgoing.messages-out.reconnect.backoff.ms=1000
mp.messaging.outgoing.messages-out.reconnect.backoff.max.ms=5000


# Add health checks
quarkus.health.extensions.enabled=true
quarkus.smallrye-health.ui.always-include=true

# Configure logging
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.category."org.apache.kafka".level=WARN


#Configure kafka incoming Raw Data
kafka.bootstrap.servers=kafka:9092
mp.messaging.incoming.my-channel.connector=smallrye-kafka
mp.messaging.incoming.my-channel.topic=SensorData
mp.messaging.incoming.my-channel.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.SensorData.broadcast=true


# Configuring the outgoing Kafka topic of "Processed Data"
mp.messaging.outgoing.test.connector=smallrye-kafka
mp.messaging.outgoing.test.topic=ProcessedSensorData
mp.messaging.outgoing.test.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.test.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configure JWT
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=https://example.com/issuer
quarkus.native.resources.includes=publicKey.pem
smallrye.jwt.sign.key.location=privateKey.pem
quarkus.native.resources.includes=privateKey.pem

# MySQL datasource config
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=admin
quarkus.datasource.password=admin123
quarkus.datasource.jdbc.url=jdbc:mysql://mysql:3306/sql_data
quarkus.datasource.jdbc.driver=com.mysql.cj.jdbc.Driver

# Hibernate config
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=true

# InfluxDB config
influx.url=http://influxdb:8086
influx.token=abc
influx.org=UA
influx.bucket=bucket1

# CORS config
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, POST, PUT, DELETE, OPTIONS
